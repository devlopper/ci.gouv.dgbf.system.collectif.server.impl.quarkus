CREATE OR REPLACE PROCEDURE PA_CREER_VM_DEPENSE AUTHID CURRENT_USER  AS vcount NUMBER;
BEGIN
	SELECT COUNT(*) INTO vcount FROM all_mviews WHERE mview_name = 'VMA_DEPENSE';
    IF vcount = 1 THEN
        EXECUTE IMMEDIATE  'DROP MATERIALIZED VIEW VMA_DEPENSE';
        dbms_output.put_line('VMA_DEPENSE Dropped'); 
    END IF;
	--EXCEPTION WHEN OTHERS THEN  dbms_output.put_line('Error while dropping VMA_DEPENSE : '||SQLERRM); 
	EXECUTE IMMEDIATE 'CREATE MATERIALIZED VIEW VMA_DEPENSE REFRESH NEXT SYSDATE + 1/(24) COMPLETE AS
	SELECT version_collectif.identifiant||d.activite_code||d.nature_economique_code||d.source_financement_code||d.bailleur_code AS "IDENTIFIANT",version_collectif.identifiant AS "VERSION_COLLECTIF",d.*
	FROM UT_BIDF_TAMP.va_depense@dblink_elabo_bidf d
	JOIN VMA_EXERCICE exercice ON exercice.annee = d.exercice
	JOIN TA_COLLECTIF collectif ON collectif.exercice = exercice.identifiant
	JOIN TA_VERSION_COLLECTIF version_collectif ON version_collectif.collectif = collectif.identifiant';
	dbms_output.put_line('VMA_DEPENSE Created'); 
	EXECUTE IMMEDIATE 'ALTER TABLE VMA_DEPENSE ADD CONSTRAINT VMA_DEPENSE_PK PRIMARY KEY (IDENTIFIANT)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_EXERCICE ON VMA_DEPENSE (EXERCICE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_V_COLLECTIF ON VMA_DEPENSE (VERSION_COLLECTIF ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ACTIVITE ON VMA_DEPENSE (ACTIVITE_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ACTIVITE_CODE ON VMA_DEPENSE (ACTIVITE_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ACTIVITE_COD_LIB ON VMA_DEPENSE (ACTIVITE_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_NE ON VMA_DEPENSE (NATURE_ECONOMIQUE_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_NE_CODE ON VMA_DEPENSE (NATURE_ECONOMIQUE_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_NE_COD_LIB ON VMA_DEPENSE (NATURE_ECONOMIQUE_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_SF ON VMA_DEPENSE (SOURCE_FINANCEMENT_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_SF_CODE ON VMA_DEPENSE (SOURCE_FINANCEMENT_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_SF_COD_LIB ON VMA_DEPENSE (SF_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_BAILLEUR ON VMA_DEPENSE (BAILLEUR_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_BAILLEUR_CODE ON VMA_DEPENSE (BAILLEUR_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_BAILLEUR_COD_LIB ON VMA_DEPENSE (BAILLEUR_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ND ON VMA_DEPENSE (NATURE_DEPENSE_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ND_CODE ON VMA_DEPENSE (NATURE_DEPENSE_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ND_COD_LIB ON VMA_DEPENSE (NATURE_DEPENSE_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ACTION ON VMA_DEPENSE (ACTION_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ACTION_CODE ON VMA_DEPENSE (ACTION_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_ACTION_COD_LIB ON VMA_DEPENSE (ACTION_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_USB ON VMA_DEPENSE (USB_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_USB_CODE ON VMA_DEPENSE (USB_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_USB_COD_LIB ON VMA_DEPENSE (USB_CODE_LIBELLE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_SECTION ON VMA_DEPENSE (SECTION_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_SECTION_CODE ON VMA_DEPENSE (SECTION_CODE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_DEPENSE_K_SECTION_COD_LIB ON VMA_DEPENSE (SECTION_CODE_LIBELLE ASC)';
	
	/* Compile depend objects */
	EXECUTE IMMEDIATE 'ALTER VIEW VA_DEPENSE_IMPORTEE COMPILE';
    EXECUTE IMMEDIATE 'ALTER VIEW VA_DEPENSE_IMPORTABLE COMPILE';
    EXECUTE IMMEDIATE 'ALTER VIEW VA_DEPENSE_MOUVEMENT_INCLUS COMPILE';
END;

CREATE OR REPLACE PROCEDURE PA_CREER_VM_RESSOURCE AUTHID CURRENT_USER AS vcount NUMBER;
BEGIN
	SELECT COUNT(*) INTO vcount FROM all_mviews WHERE mview_name = 'VMA_RESSOURCE';
    IF vcount = 1 THEN
        EXECUTE IMMEDIATE  'DROP MATERIALIZED VIEW VMA_RESSOURCE';
        dbms_output.put_line('VMA_RESSOURCE Dropped'); 
    END IF;
	--EXCEPTION WHEN OTHERS THEN  dbms_output.put_line('Error while dropping VMA_RESSOURCE : '||SQLERRM); 
	EXECUTE IMMEDIATE 'CREATE MATERIALIZED VIEW VMA_RESSOURCE REFRESH NEXT SYSDATE + 1/(24) COMPLETE AS
	SELECT version_collectif.identifiant||r.activite_code||r.nature_economique_code AS "IDENTIFIANT",version_collectif.identifiant AS "VERSION_COLLECTIF",r.*
	FROM UT_BIDF_TAMP.va_ressource@dblink_elabo_bidf r
	JOIN VMA_EXERCICE exercice ON exercice.annee = r.exercice
	JOIN TA_COLLECTIF collectif ON collectif.exercice = exercice.identifiant
	JOIN TA_VERSION_COLLECTIF version_collectif ON version_collectif.collectif = collectif.identifiant';
	dbms_output.put_line('VMA_RESSOURCE Created'); 
	EXECUTE IMMEDIATE 'ALTER TABLE VMA_RESSOURCE ADD CONSTRAINT VMA_RESSOURCE_PK PRIMARY KEY (IDENTIFIANT)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_RESSOURCE_K_EXERCICE ON VMA_RESSOURCE (EXERCICE ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_RESSOURCE_K_ACTIVITE ON VMA_RESSOURCE (ACTIVITE_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_RESSOURCE_K_NE ON VMA_RESSOURCE (NATURE_ECONOMIQUE_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_RESSOURCE_K_USB ON VMA_RESSOURCE (USB_IDENTIFIANT ASC)';
	EXECUTE IMMEDIATE 'CREATE INDEX VMA_RESSOURCE_K_SECTION ON VMA_RESSOURCE (SECTION_IDENTIFIANT ASC)';
	
	/* Compile depend objects */
	EXECUTE IMMEDIATE 'ALTER VIEW VA_RESSOURCE_IMPORTEE COMPILE';
    EXECUTE IMMEDIATE 'ALTER VIEW VA_RESSOURCE_IMPORTABLE COMPILE';
END;

CREATE OR REPLACE PROCEDURE PA_ACTUALISER_VM(nom_table IN VARCHAR2) AUTHID CURRENT_USER AS
    uuid VARCHAR2(32);
BEGIN
    uuid := SYS_GUID();
    INSERT INTO TA_PA_ACTUALISER_VM(IDENTIFIANT,VM,DATE_DEBUT) VALUES (uuid,nom_table,SYSDATE);
	IF nom_table = 'VMA_DEPENSE' THEN
    	PA_CREER_VM_DEPENSE();
    ELSIF nom_table = 'VMA_RESSOURCE' THEN
    	PA_CREER_VM_RESSOURCE();
	END IF;
    UPDATE TA_PA_ACTUALISER_VM SET DATE_FIN = SYSDATE WHERE IDENTIFIANT = uuid;
END;